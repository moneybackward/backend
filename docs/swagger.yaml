definitions:
  dto.CategoryDTO:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      name:
        type: string
      note_id:
        type: integer
      priority:
        type: integer
      updated_at:
        type: string
    type: object
  dto.NoteDTO:
    properties:
      name:
        type: string
      user_id:
        type: string
    required:
    - name
    - user_id
    type: object
  dto.TransactionDTO:
    properties:
      amount:
        type: integer
      category_id:
        type: integer
      label:
        type: string
      note_id:
        type: integer
      timestamp:
        type: string
    type: object
  dto.UserDTO:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  models.Category:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      name:
        type: string
      note:
        $ref: '#/definitions/models.Note'
      note_id:
        type: integer
      priority:
        type: integer
      updated_at:
        type: string
    type: object
  models.Note:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: string
    type: object
  models.Transaction:
    properties:
      amount:
        type: integer
      category:
        $ref: '#/definitions/models.Category'
      category_id:
        type: integer
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      label:
        type: string
      note:
        $ref: '#/definitions/models.Note'
      note_id:
        type: integer
      timestamp:
        type: string
      updated_at:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact: {}
paths:
  /notes:
    get:
      parameters:
      - description: User ID
        in: query
        name: userId
        required: true
        type: string
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/models.Note'
            type: array
      summary: List notes
      tags:
      - notes
    post:
      consumes:
      - application/json
      parameters:
      - description: Note
        in: body
        name: note
        required: true
        schema:
          $ref: '#/definitions/dto.NoteDTO'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Note'
      summary: Add a note
      tags:
      - notes
  /notes/{note_id}/categories:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
      summary: List categories
      tags:
      - categories
    post:
      consumes:
      - application/json
      parameters:
      - description: Category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/dto.CategoryDTO'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Category'
      summary: Add a category
      tags:
      - categories
  /notes/{note_id}/transactions:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Transaction'
            type: array
      summary: List transactions
      tags:
      - transactions
    post:
      consumes:
      - application/json
      parameters:
      - description: transaction
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/dto.TransactionDTO'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Transaction'
      summary: Add a transaction
      tags:
      - transactions
  /users:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: List users
      tags:
      - users
    post:
      consumes:
      - application/json
      parameters:
      - description: User
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/dto.UserDTO'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: Add a user
      tags:
      - users
swagger: "2.0"
