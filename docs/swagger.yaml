definitions:
  dto.CategoryCreateDTO:
    properties:
      budget:
        type: number
      name:
        type: string
      priority:
        type: integer
    type: object
  dto.CategoryDTO:
    properties:
      budget:
        type: number
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      name:
        type: string
      note_id:
        type: string
      priority:
        type: integer
      updated_at:
        type: string
    type: object
  dto.CategoryUpdateDTO:
    properties:
      budget:
        type: number
      name:
        type: string
      priority:
        type: integer
    type: object
  dto.NoteCreateDTO:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  dto.NoteDTO:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    required:
    - name
    - user_id
    type: object
  dto.NoteUpdateDTO:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  dto.TransactionCreateDTO:
    properties:
      amount:
        type: number
      category_id:
        type: string
      date:
        type: string
      is_expense:
        type: boolean
      label:
        type: string
    type: object
  dto.TransactionDTO:
    properties:
      amount:
        type: number
      category_id:
        type: string
      created_at:
        type: string
      date:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      is_expense:
        type: boolean
      label:
        type: string
      note_id:
        type: string
      updated_at:
        type: string
    type: object
  dto.TransactionUpdateDTO:
    properties:
      amount:
        type: number
      category_id:
        type: string
      date:
        type: string
      is_expense:
        type: boolean
      label:
        type: string
    type: object
  dto.UserLoginDTO:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.UserRegisterDTO:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      password_confirmation:
        type: string
    required:
    - email
    - name
    - password
    - password_confirmation
    type: object
  models.Category:
    properties:
      budget:
        type: number
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      note:
        $ref: '#/definitions/models.Note'
      note_id:
        type: string
      priority:
        type: integer
      updated_at:
        type: string
    type: object
  models.Note:
    properties:
      categories:
        items:
          $ref: '#/definitions/models.Category'
        type: array
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      transactions:
        items:
          $ref: '#/definitions/models.Transaction'
        type: array
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: string
    type: object
  models.Transaction:
    properties:
      amount:
        type: number
      category:
        $ref: '#/definitions/models.Category'
      category_id:
        type: string
      created_at:
        type: string
      date:
        type: string
      id:
        type: string
      is_expense:
        type: boolean
      label:
        type: string
      note:
        $ref: '#/definitions/models.Note'
      note_id:
        type: string
      updated_at:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: User
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/dto.UserLoginDTO'
      responses:
        "200":
          description: OK
      summary: Login a user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: User
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/dto.UserRegisterDTO'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: Register a user
      tags:
      - auth
  /auth/verify:
    get:
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      summary: Verify a token
      tags:
      - auth
  /notes:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.NoteDTO'
            type: array
      security:
      - BearerAuth: []
      summary: List notes
      tags:
      - notes
    post:
      consumes:
      - application/json
      parameters:
      - description: Note
        in: body
        name: note
        required: true
        schema:
          $ref: '#/definitions/dto.NoteCreateDTO'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Note'
      security:
      - BearerAuth: []
      summary: Create a note
      tags:
      - notes
  /notes/{note_id}:
    delete:
      parameters:
      - description: Note ID
        in: path
        name: note_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: Delete a note
      tags:
      - notes
    get:
      parameters:
      - description: Note ID
        in: path
        name: note_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.NoteDTO'
      security:
      - BearerAuth: []
      summary: Get a note
      tags:
      - notes
    put:
      parameters:
      - description: Note ID
        in: path
        name: note_id
        required: true
        type: string
      - description: Note
        in: body
        name: note
        required: true
        schema:
          $ref: '#/definitions/dto.NoteUpdateDTO'
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      summary: Update a note
      tags:
      - notes
  /notes/{note_id}/categories:
    get:
      parameters:
      - description: Note ID
        in: path
        name: note_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.CategoryDTO'
            type: array
      security:
      - BearerAuth: []
      summary: List categories
      tags:
      - categories
    post:
      consumes:
      - application/json
      parameters:
      - description: Note ID
        in: path
        name: note_id
        required: true
        type: string
      - description: Category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/dto.CategoryCreateDTO'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.CategoryDTO'
      security:
      - BearerAuth: []
      summary: Create a category
      tags:
      - categories
  /notes/{note_id}/categories/{category_id}:
    delete:
      parameters:
      - description: Note ID
        in: path
        name: note_id
        required: true
        type: string
      - description: Category ID
        in: path
        name: category_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: Delete a category
      tags:
      - categories
    get:
      parameters:
      - description: Note ID
        in: path
        name: note_id
        required: true
        type: string
      - description: Category ID
        in: path
        name: category_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CategoryDTO'
      security:
      - BearerAuth: []
      summary: Get a category
      tags:
      - categories
    put:
      consumes:
      - application/json
      parameters:
      - description: Note ID
        in: path
        name: note_id
        required: true
        type: string
      - description: Category ID
        in: path
        name: category_id
        required: true
        type: string
      - description: Category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/dto.CategoryUpdateDTO'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CategoryDTO'
      security:
      - BearerAuth: []
      summary: Update a category
      tags:
      - categories
  /notes/{note_id}/transactions:
    get:
      parameters:
      - description: Note ID
        in: path
        name: note_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.TransactionDTO'
            type: array
      security:
      - BearerAuth: []
      summary: List transactions
      tags:
      - transactions
    post:
      consumes:
      - application/json
      parameters:
      - description: Note ID
        in: path
        name: note_id
        required: true
        type: string
      - description: transaction
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/dto.TransactionCreateDTO'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.TransactionDTO'
      security:
      - BearerAuth: []
      summary: Add a transaction
      tags:
      - transactions
  /notes/{note_id}/transactions/{transaction_id}:
    delete:
      parameters:
      - description: Note ID
        in: path
        name: note_id
        required: true
        type: string
      - description: Transaction ID
        in: path
        name: transaction_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: Delete a transaction
      tags:
      - transactions
    get:
      parameters:
      - description: Note ID
        in: path
        name: note_id
        required: true
        type: string
      - description: Transaction ID
        in: path
        name: transaction_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.TransactionDTO'
            type: array
      security:
      - BearerAuth: []
      summary: Get transaction detail
      tags:
      - transactions
    put:
      consumes:
      - application/json
      parameters:
      - description: Note ID
        in: path
        name: note_id
        required: true
        type: string
      - description: Transaction ID
        in: path
        name: transaction_id
        required: true
        type: string
      - description: transaction
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/dto.TransactionUpdateDTO'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TransactionDTO'
      security:
      - BearerAuth: []
      summary: Set budget for a transaction
      tags:
      - transactions
  /users:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      security:
      - BearerAuth: []
      summary: List users
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
